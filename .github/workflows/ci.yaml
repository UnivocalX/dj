name: Python App CI
run-name: "CI Run #${{ github.run_id }} on ${{ github.ref_name }} triggered by ${{ github.event_name }} | Commit: ${{ github.event.head_commit.message }}"

on:
  push:
    branches:
      - main
      - "feat/**"
      - "patch/**"
      - "experiment/**"
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".gitignore"

jobs:
  continuous-integration:
    name: Continuous Integration
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      PYTHON_VERSION: "3.12"
      RUFF_TARGET_VERSION: "py312"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Debug
        run: |
          echo "PWD: $(pwd)"
          ls -l
          cat pyproject.toml

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Setup Tools
        run: |
          python -m pip install --upgrade pip
          pip install poetry==2.1.3
          poetry config virtualenvs.create false
          poetry install

      - name: Lint
        run: |
          poetry run ruff --version
          poetry run ruff check --fix

      - name: Type Checks
        run: |
          poetry run mypy --version
          poetry run mypy src/ --config-file pyproject.toml --ignore-missing-imports --python-version ${{ env.PYTHON_VERSION }}

      - name: Tests
        run: |
          export PYTHONPATH=${{ github.workspace }}
          export CI=true
          pytest tests/

      - name: Format
        run: |
          ruff format

      - name: Push Formatting
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -u
          git diff --cached --quiet || (git commit -m "Apply automatic formatting [skip ci]" && git push)

      - name: Version Increment
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          LOWER_COMMIT_MSG=$(echo "$COMMIT_MSG" | tr '[:upper:]' '[:lower:]')

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            if [[ "$LOWER_COMMIT_MSG" == *"feat"* ]]; then
              poetry version minor
            elif [[ "$LOWER_COMMIT_MSG" == *"patch"* ]]; then
              poetry version patch
            elif [[ "$LOWER_COMMIT_MSG" == *"major"* ]]; then
              poetry version major
            fi
          else
            poetry version prerelease
          fi

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pyproject.toml
          git diff --cached --quiet || (git commit -m "Bump version to $(poetry version -s) [skip ci]" && git push)
